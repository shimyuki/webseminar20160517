package {    import flash.events.*;	import flash.display.*;	import flash.text.*;	import flash.net.*;	import caurina.transitions.*;	import partition.*;	import window.*;	import window.video.*;	import window.chat.*;	import window.whiteboard.*;	import window.header.*;	import common.*;	public class Main_wb extends Main {        public function Main_wb() {			stage.scaleMode = StageScaleMode.NO_SCALE;			//Main.HEADER_H = 25;			super();			stage.scaleMode = StageScaleMode.NO_SCALE;			mc_loading.y = 220;			stage.addEventListener( Event.RESIZE, onResize);		}				override protected function changeStuLayout( newLayoutName = "") {//alertDialog("Main_wb: changeStuLayout");			var pConArr:Array = new Array();// パーティションコンテナの配列			pConArr.push( m_wbCon);			pConArr.push( m_wbCon.getLeftCon());						if( m_all_base == null) {				var headerWin = new ResizableWindow( W, HEADER_H_WB, HEADER_WMIN_WB, HEADER_H_WB, 0xf2f2f2);				//m_all_base = new PartitionContainer( MAIN_W, BODY_H, TOP_BTM, headerWin, m_wbWin, HEADER_H_WB);				m_all_base = new PartitionContainer_allBase( W, H, TOP_BTM, m_headerWin, m_wbWin, HEADER_H_WB);				addChild( m_all_base);//alertDialog("koko1");			} else {				// タイトルバーがなぜか消えちゃうので、キャンセル				//m_all_base.init_container2nd( m_wbCon);			}			m_partitionDragManager.init( m_all_base, pConArr);										// ホワイトボードのスケールとスクロール情報の同期開始／終了			// まずはみんなのレイアウトを取得			var nowLayout = null;			var layoutArr:Array = CONF.getLayoutArr();			if( newLayoutName == "") {				nowLayout = layoutArr[1];			} else {				for each( var layout:Layout in layoutArr) {					if( layout.name == newLayoutName) {						nowLayout = layout;					}				}			}			if( nowLayout == null) {				addChild( m_errMsg);				m_errMsg.text = Main.LANG.getParam( "画面モード選択エラー");				nowLayout = layoutArr[0];			} else {				m_errMsg.text = "";			}						var wb_admin:Boolean = true;			/*if( so_join != null && so_join.data.joinFlag != undefined && so_join.data.joinFlag[ Main.CONF.getProId()] != undefined) {				wb_admin = ! so_join.data.joinFlag[ Main.CONF.getProId()];			}*/			if( so_join != null && so_join.data.hasOwnProperty( Main.CONF.getProId())) {				wb_admin = ! so_join.data[ Main.CONF.getProId()];			}			m_wbCon.syncScrollScale( nowLayout.partitionLock, wb_admin);										onResize();					}		/*		override protected function onResize( e:Event = null) {			if( stage == null || m_all_base == null) return;						if( contains( mc_loading)) {				mc_loading.x = ( stage.stageWidth - mc_loading.width)/ 2;				mc_loading.y = ( stage.stageHeight - mc_loading.height)/ 2;			}						m_all_base.setViewWidth( stage.stageWidth);			m_all_base.setViewHeight( stage.stageHeight);									m_partitionDragManager.addEventListener( "onAutoResize finished", onAutoResizeFinished);			m_partitionDragManager.onAutoResize();					}		function onAutoResizeFinished( e:Event) {			m_partitionDragManager.removeEventListener( "onAutoResize finished", onAutoResizeFinished);			m_wbCon.fitContentsViewSize();			m_partitionDragManager.onAutoResize();		}*/    }}