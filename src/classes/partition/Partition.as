package partition {	import flash.display.*;	import flash.events.*;	import flash.geom.*;	import flash.ui.Mouse;	import window.*;	import window.whiteboard.WhiteboardContainer;		// パーティション	public class Partition extends Sprite {		static public const ROLL_OVER:String = "Partition ROLL_OVER";		static public const ROLL_OUT:String = "Partition ROLL_OUT";		static public const W = 10;				private var m_isVertical:Boolean;		// カーソル		private var m_pointer:PartitionCursor;				private var m_bar:Sprite;		public function Partition( isVertical:Boolean) {			m_isVertical = isVertical;			graphics.beginFill( 0xffffff);			//graphics.beginFill( 0);			if( m_isVertical) graphics.drawRect( -5, 0, W, W);			else  graphics.drawRect( 0, -5, W, W);			graphics.endFill();									var matr:Matrix = new Matrix();			if( m_isVertical) matr.createGradientBox( 8, W, 0, -4, 0);			else matr.createGradientBox( W, 8, Math.PI / 2, 0, -4);			//matr.createGradientBox( 10, 8, Math.PI / 2, 0, -4);						m_bar = new Sprite();			m_bar.graphics.beginGradientFill( GradientType.LINEAR,										   [ 0xcccccc, 0xffffff, 0xcccccc],										   [ 1, 1, 1],										   [ 0, 127, 255],										   matr);						if( m_isVertical) m_bar.graphics.drawRect( -4, 0, 8, W);			else m_bar.graphics.drawRect( 0, -4, W, 8);						addChild( m_bar);						// カーソル			m_pointer = new PartitionCursor();			m_pointer.name = "PartitionCursor";			if( ! m_isVertical) m_pointer.rotation = 90;						/*			ポップアップでステージからREMOVE/ADDされる可能性がある。			addEventListener( Event.ADDED_TO_STAGE, function( e:*) {							 addEventListener( Event.ENTER_FRAME, onEnterFrame);							 });						addEventListener( Event.REMOVED_FROM_STAGE, function( e:*) {							 removeEventListener( Event.ENTER_FRAME, onEnterFrame);							 showCursor();							 });			*/						//setEnabled( false);								}				// PartitionDragManagerからPartitionContainer経由で呼ばれる		public function setEnabled( b:Boolean):void {			if( b) {				addEventListener( Event.ENTER_FRAME, onEnterFrame);			} else {				removeEventListener( Event.ENTER_FRAME, onEnterFrame);				showCursor();			}		}				function showPointer() : void {			// カーソルを消す			Main.MOUSE_MANAGER.showMouse( false, this);			//if( ExternalInterface.available) ExternalInterface.call( "flashFunc_title", "カーソルを消す");			m_pointer.visible = true;						if( stage == null) return;			if( ! stage.contains( m_pointer)) {				stage.addChild( m_pointer);				m_pointer.visible = true;				dispatchEvent( new Event( ROLL_OVER));			}		}		function showCursor() : void {						//if( stage.getChildByName( "WbSlideCursor") != null) return;						// カーソルを表示			Main.MOUSE_MANAGER.showMouse( true, this);			//if( ExternalInterface.available) ExternalInterface.call( "flashFunc_title", "カーソルを表示");						if( stage == null) {				m_pointer.visible = false;				return;			}						if( stage.contains( m_pointer)) {				stage.removeChild( m_pointer);				dispatchEvent( new Event( ROLL_OUT));			}		}		function onEnterFrame( e:Event) {			if( stage == null) return;			if( stage.mouseX == m_pointer.x && stage.mouseY == m_pointer.y) {				return;			}			m_pointer.x = stage.mouseX;			m_pointer.y = stage.mouseY;									if( Main.POPUP_CONTAINER != null && Main.POPUP_CONTAINER.isRollOvered() && ! Main.POPUP_CONTAINER.contains( this)) {				// カーソル位置がポップアップに隠れていて、かつこのパーティションがポップアップされていない場合				showCursor();			} else if( Main.m_wbWin != null && Main.m_wbWin.isRollOvered()) {				// カーソル位置がツールパネルに隠れていて、かつこのパーティションが表示されていない場合				showCursor();			} else if( Main.DROP_OPENED) {				// 画面モードとかのプルダウンが開いているとき				showCursor();			} else {				// マウスがパーティション外に外れたらストップ				if( m_isVertical) {					if( -5 < mouseX && mouseX < 5 && 0 < mouseY && mouseY < 10 ) { showPointer();}					else { showCursor();}				} else {					if( 0 < mouseX && mouseX < 10 && -5 < mouseY && mouseY < 5 ) { showPointer();}					else { showCursor();}				}			}		}			}}