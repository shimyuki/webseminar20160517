package partition {	import flash.display.*;	import flash.geom.*;	import flash.events.*;	import flash.utils.describeType;	import flash.accessibility.Accessibility;	import window.ResizableWindow;		// パーティションによって２分されるコンテナのセット	public class PartitionContainer_allBase extends PartitionContainer {		public static const RESIZE = "PartitionContainer_allBase RESIZE";		public function PartitionContainer_allBase( _w:Number, _h:Number, isVertical:Boolean, container1st, container2nd, partitionPosi:Number) {			super( _w, _h, isVertical, container1st, container2nd, partitionPosi);		}				// 画面モード変更時に呼ばれる		// 1stコンテナがヘッダーで、2ndコンテナがメインの領域。		override public function init_container2nd( container2nd) {						// フルカラムの場合、すなわち第二コンテナがResizableWindowの場合、			// パーティションマネージャーの管理外になるのでサイズが変更されないので			// ここでサイズ合わせをする			if( ( container2nd as ResizableWindow) != null) {//alertDialog( String( m_partition.width));				setViewWidth( m_partition.width); // フルカラム			}						super.init_container2nd( container2nd);		}		override public function setViewWidth( _w:Number, debug:String = ""):void {			super.setViewWidth( _w);			ResizableWindow( m_container1st).setViewWidth( _w);			if( m_container2nd as PartitionContainer) {				PartitionContainer( m_container2nd).setViewWidth( _w);				PartitionContainer( m_container2nd).replace_once();			} else if( m_container2nd as ResizableWindow) {				ResizableWindow( m_container2nd).setViewWidth( _w);			}		}		override public function setViewHeight( _h:Number):void {			super.setViewHeight( _h);			if( m_container2nd as PartitionContainer) {				PartitionContainer( m_container2nd).setViewHeight( _h - Main.HEADER_H - Partition.W);				PartitionContainer( m_container2nd).replace_once();			} else if( m_container2nd as ResizableWindow) {				ResizableWindow( m_container2nd).setViewHeight( _h - Main.HEADER_H - Partition.W);			}		}		public function replace_allBase() {			replace();		}				override protected function replace():void {			super.replace();			//if( Main.CONF.UID != Main.CONF.getWhiteboardUID()) m_container2nd.setViewHeight( Main.BODY_H);		}				// Main_android:fit()から呼ばれる		public function setPartitionX( _x:Number) {			m_partition.x = _x;			dispatchEvent( new Event( RESIZE)); // PartitionDragManagerに知らせる		}				// Main_android:fit()から呼ばれる		public function getPartitionX():Number {			return m_partition.x;		}	}}