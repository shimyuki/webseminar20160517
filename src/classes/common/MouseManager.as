package common {	import flash.ui.*;	import flash.events.*;	import flash.display.*;		public class MouseManager extends EventDispatcher {		private var m_objHash:Object;		private var m_statusHash:Object;		private var m_status:Boolean = true;		private var m_enabled:Boolean = true;		private var stage;		public function MouseManager( stage) {			m_objHash = new Object();			m_statusHash = new Object();			//stage.addEventListener( Event.ENTER_FRAME, onEnterFrame);			this.stage = stage;		}		// obj から マウス表示/非表示のリクエストを受け付ける。		// 全objが「表示」と言っていたら表示するが、		// 一人でも「非表示」と言っていたら表示しない。		// 第１引数：requestStatus:表示true／非表示falseのリクエスト		// 第２引数：obj:リクエストをした人		public function showMouse( requestStatus:Boolean, obj:DisplayObject) {			// objがm_objHashに登録済みかチェック			var targetKey:String = "";			for( var key:String in m_objHash){				if( m_objHash[ key] === obj) {					targetKey = key;					break;				}			}			if( targetKey == "") {				// obj未登録なので、キーを生成				targetKey = String( Math.random());				while( isRegisterdKey( targetKey)) {					targetKey = String( Math.random());				}				// obj登録				m_objHash[ targetKey] = obj;			}			m_statusHash[ targetKey] = requestStatus;						resetMouse();					}		function resetMouse() {//if( ExternalInterface.available) ExternalInterface.call( "flashFunc_title", "");						if( ! m_enabled) {				Mouse.show();				return;			}			// 全objが「表示」と言っていたら表示するが、			// 一人でも「非表示」と言っていたら表示しない。			var newStatus:Boolean = true;			for( var key:String in m_statusHash){				// objがステージに配置されていなければ無視				if( m_objHash[ key] == null || DisplayObject( m_objHash[ key]).stage == null) {					m_statusHash[ key] = true; // trueにもどす					continue;				}				// マウスの位置がobjの上に無ければ無視				if( m_statusHash[ key] == false) {					newStatus = false;					break;				}			}			if( newStatus != m_status) {				m_status = newStatus;				if( m_status) Mouse.show();				else Mouse.hide();			}//if( ExternalInterface.available) ExternalInterface.call( "flashFunc_title", "Mouse:" + m_status);		}		/*		function onEnterFrame( e:Event) {//if( ExternalInterface.available) ExternalInterface.call( "flashFunc_title", "");						if( ! m_enabled) {				Mouse.show();				this.stage.removeEventListener( Event.ENTER_FRAME, onEnterFrame);				return;			}			// 全objが「表示」と言っていたら表示するが、			// 一人でも「非表示」と言っていたら表示しない。			var newStatus:Boolean = true;			for( var key:String in m_statusHash){				// objがステージに配置されていなければ無視				if( m_objHash[ key] == null || DisplayObject( m_objHash[ key]).stage == null) {					m_statusHash[ key] = true; // trueにもどす					continue;				}				// マウスの位置がobjの上に無ければ無視				if( m_statusHash[ key] == false) {					newStatus = false;					break;				}			}			if( newStatus != m_status) {				m_status = newStatus;				if( m_status) Mouse.show();				else Mouse.hide();			}		}*/		function isRegisterdKey( key:String):Boolean {			for( var registerdKey:String in m_objHash){				if( registerdKey == key) {					return true;				}			}			return false;		}		public function setEnabled( b:Boolean) {			m_enabled = b;			if( b) {				//if( this.stage != null) this.stage.addEventListener( Event.ENTER_FRAME, onEnterFrame);			}		}	}}