package window.chat {	import flash.display.*;	import flash.geom.*;	import common.*;	import window.*;	import partition.Layout;	import flash.text.*;	import flash.events.*;	import flash.net.*;	import flash.ui.Keyboard;	import fl.controls.CheckBox;	// 全体のチャット（とアクションログ）	public class ChatContainer_all extends ChatContainer {				private var so_show4stu:SharedObject = null;		private const HEADER_H = 30;		private var m_chkbox:CheckBox = null; // 講師用		private var m_text_hide4stu:TextField = null; // 受講者用		public function ChatContainer_all( w:Number, h:Number)		{						super( w, h, "chat_and_actionlog", "master", Main.BASE_COLOR_01, Main.CONF.isPro( Main.CONF.UID) ? HEADER_H : 0);						if( Main.CONF.isPro( Main.CONF.UID)) {								m_inputBtn.y += HEADER_H;				m_inputText.y += HEADER_H;				m_line.y += HEADER_H;				m_container.y = super.INIT_Y;				m_scroll.y = super.INIT_Y;								setViewHeight( getViewHeight());												m_chkbox = CheckBox( addChild( new CheckBox()));				m_chkbox.label = Main.LANG.getParam( "受講者には非表示にする");				m_chkbox.setSize( m_chkbox.textField.textWidth + 50, m_chkbox.height);				m_chkbox.x = 5;				m_chkbox.y = 5;				m_chkbox.enabled = false;				m_chkbox.addEventListener( Event.CHANGE, onChangeChkbox);			} else {				m_text_hide4stu = TextField( addChild( new TextField()));				m_text_hide4stu.defaultTextFormat = new TextFormat( Main.CONF.getMainFont(), 11, 0xcc0000);				m_text_hide4stu.autoSize = TextFieldAutoSize.LEFT;				m_text_hide4stu.text = Main.LANG.getParam( "現在使用できません");				m_text_hide4stu.x = m_text.parent.x + m_text.x;				m_text_hide4stu.y = m_text.parent.y + m_text.y;				m_text_hide4stu.visible = false;							}		}		// 講師用		function onChangeChkbox( e:Event) {			if( m_chkbox.selected) {				so_show4stu.setProperty( "hide4stu", true);			} else {				so_show4stu.setProperty( "hide4stu", false);			}		}				override public function initSo( objname:String, nc:NetConnection) : void {			if( so_show4stu == null) {				so_show4stu = SharedObject.getRemote( objname + "_all", nc.uri, false);				if( Main.CONF.isPro( Main.CONF.UID)) {					if( m_chkbox) m_chkbox.enabled = true;				}				so_show4stu.addEventListener( SyncEvent.SYNC, onSyncShow4Stu);							} else {				//so_show4stu.removeEventListener( SyncEvent.SYNC, onSyncShow4Stu);			}			so_show4stu.connect( nc);						super.initSo( objname, nc);		}		function onSyncShow4Stu( e:SyncEvent):void {			if( ! Main.CONF.isPro( Main.CONF.UID)) {				for each( var obj in e.changeList) {					if( obj.code == "change" && obj.name=="hide4stu") {						if(so_show4stu.data["hide4stu"]) {							m_inputBtn.setEnabled( false);							m_text.visible = false;							m_inputText.type = TextFieldType.DYNAMIC;							m_text_hide4stu.visible = true;							m_scroll.visible = false;						} else {							m_inputBtn.setEnabled( true);							m_text.visible = true;							m_inputText.type = TextFieldType.INPUT;							m_text_hide4stu.visible = false;							m_scroll.visible = true;						}					}				}			}					}	}}