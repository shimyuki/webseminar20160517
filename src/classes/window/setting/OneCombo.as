package window.setting {	import fl.controls.ComboBox;	import fl.events.*;	import flash.display.*;	import flash.text.*;	import flash.events.*;		class OneCombo extends Sprite {		static public var W:Number = 180;		static public const H:Number = 38;		private var m_combo:ComboBox = null;		public function OneCombo() {			graphics.beginFill( 0x446787);			graphics.drawRect( 0, 0, W, H);			graphics.endFill();		}				public function initItems( winNameArr:Array) {			if( m_combo == null) {				m_combo = ComboBox( addChild( new ComboBox()));				m_combo.x = m_combo.y = 8;				m_combo.width = W - 16;				m_combo.opaqueBackground = 0xffffff;				m_combo.addEventListener( Event.CHANGE, function( e:*){ dispatchEvent( e);});			}			m_combo.removeAll();			for each( var winName:String in winNameArr) {				m_combo.addItem( { label:winName, data:winName});			}			m_combo.addItem( { label:WinComboSet.NOUSE, data:null});						// ドロップダウンリストのテキストの長さに基づいて dropdownWidth プロパティを設定			var maxLength:Number = 0;			var i:uint;			for ( i = 0; i < m_combo.length; i++) {				m_combo.selectedIndex = i;				m_combo.drawNow();				var currText:String = m_combo.text;				var currWidth:Number = m_combo.textField.textWidth;				maxLength = Math.max(currWidth, maxLength);			}			m_combo.dropdownWidth = maxLength + 20;		}		public function selectItem( winName:String) {			for( var i = 0; i < m_combo.length; i++) {				if( String( Object( m_combo.getItemAt( i)).label) == String( winName)) {					m_combo.selectedItem = m_combo.getItemAt( i);					break;				}			}		}		public function getSelectedData() : String {			if( m_combo.selectedItem == null) return null;			return Object( m_combo.selectedItem).data;		}		public function setEnabled( b:Boolean) {			m_combo.enabled = b;		}	}}