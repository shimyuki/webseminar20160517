package window.setting {	import flash.display.*;	import flash.geom.*;	import common.*;	import window.*;	import flash.text.*;	import flash.events.*;	import fl.controls.CheckBox;	import flash.net.*;	import flash.media.*;	import caurina.transitions.*;	import window.video.VoiceMeter;	// MemberSettingContentsの映像表示の部分(Drawerのコンテンツ)	public class FullVideo extends Sprite {				static public const W = 300;		static public const H = 400;				//private var m_video:Video;		private var m_bitmap:Bitmap;		private var m_uid:String;		private var m_base:Shape;						//private var m_nc:NetConnection;		private var m_receive_ns:MyNetStream = null;		public function FullVideo() {						m_base = Shape( addChild( new Shape()));			m_base.graphics.beginFill( 0xcccccc);			m_base.graphics.drawRect( 0, 0, 1, H);			m_base.graphics.endFill();									// サムネイルとなる画像			/*m_loader = new Loader();			m_loader.contentLoaderInfo.addEventListener( Event.COMPLETE, onComplete);			m_loader.contentLoaderInfo.addEventListener( IOErrorEvent.IO_ERROR, function(e:*){});			addChild( m_loader);*/			m_bitmap = new Bitmap( null);			addChild( m_bitmap);						// ビデオ			/*m_video = Video( addChild( new Video()));			m_video.smoothing = true;			m_video.x = 0;			m_video.y = 0;			m_video.height = H;			m_video.width = H / 3 * 4;*/						//addEventListener( Event.ADDED_TO_STAGE, onAddedToStage);			//addEventListener( Event.REMOVED_FROM_STAGE, onRemovedFromStage);		}		public function init( uid:String) {			m_uid = uid;						var memberData = Main.CONF.getMemberDataHash( m_uid);			if( memberData != null) m_bitmap.bitmapData = Main.CONF.getMemberImgBmpdata( memberData.img);						setLoaderSizePosi();		}						function onComplete ( e:Event):void {			setLoaderSizePosi();		}		function setLoaderSizePosi() {			if( m_bitmap.bitmapData != null) {				var scale_x:Number = W / m_bitmap.bitmapData.width < 1 ? W / m_bitmap.bitmapData.width : 1;				var scale_y:Number = H / m_bitmap.bitmapData.height < 1 ? H / m_bitmap.bitmapData.height : 1;				m_bitmap.scaleX = m_bitmap.scaleY = scale_x < scale_y ? scale_x : scale_y;			} else {				m_bitmap.width = W;				m_bitmap.height = H;			}						m_bitmap.x = ( m_base.width - W) / 2 + ( W - m_bitmap.width) / 2;			m_bitmap.y = ( H - m_bitmap.height) / 2;		}				// ビデオの受信		public function receiveNetStream( nc:NetConnection):void {			/*			if( m_receive_ns != null) {				m_receive_ns.close();				m_receive_ns = null;			}			m_receive_ns = new MyNetStream( nc, m_uid);			m_receive_ns.receiveAudio( false);			m_video.attachNetStream( m_receive_ns);			m_receive_ns.play( m_uid);			*/		}										public function setViewWidth( w:Number):void {			m_base.scaleX = w;						//m_video.x = ( m_base.width - W) / 2;			setLoaderSizePosi();								}		function alertDialog( str) {			Main.addErrMsg(  "FullVideo:" + String(str));		}	}}