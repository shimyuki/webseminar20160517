package window.setting {	import flash.display.*;	import fl.controls.ComboBox;	import flash.text.*;	import flash.events.*;	import flash.net.URLRequest;		public class Cell extends Sprite {		protected const HEADER_H = 27;		protected const FOOTER_H = 27;		protected var W:Number;		protected var H:Number;		protected var IMG_W:Number;		protected var IMG_H:Number;		protected var m_title:TextField;		protected var m_bitmap:Bitmap;				protected var m_selectedUid:String;				public function Cell( uid:String, _w:Number) {			W = _w;			m_selectedUid = uid != "" ? uid : null;									m_title = TextField( addChild( new TextField()));									var memberData = Main.CONF.getMemberDataHash( uid);			m_bitmap = new Bitmap( null);			addChild( m_bitmap);						m_title.defaultTextFormat = new TextFormat( Main.CONF.getMainFont(), 11);			m_title.selectable = m_title.mouseEnabled = false;			m_title.text = memberData != null ? memberData.name : LayoutComponents.LABEL_NOUSE;			m_title.x = 5;			m_title.y = ( HEADER_H - m_title.textHeight) / 2 + 2;			m_title.height = m_title.textHeight + 4;			m_title.width = _w - m_title.x;									addEventListener( Event.ADDED_TO_STAGE, onAddedToStage);						setWidth( _w);		}		function onAddedToStage( e:Event) {						if( !m_selectedUid) return;			var memberData = Main.CONF.getMemberDataHash( m_selectedUid);			if( memberData != null) m_bitmap.bitmapData = Main.CONF.getMemberImgBmpdata( memberData.img);			setLoaderSizePosi();		}				function setLoaderSizePosi() {			if( m_bitmap.bitmapData != null) {				var scale_x:Number = IMG_W / m_bitmap.bitmapData.width < 1 ? IMG_W / m_bitmap.bitmapData.width : 1;				var scale_y:Number = IMG_H / m_bitmap.bitmapData.height < 1 ? IMG_H / m_bitmap.bitmapData.height : 1;				m_bitmap.scaleX = m_bitmap.scaleY = scale_x < scale_y ? scale_x : scale_y;			} else {				m_bitmap.width = IMG_W;				m_bitmap.height = IMG_H;			}						var x0:Number = 2;			var y0:Number = 2 + HEADER_H + 1;			m_bitmap.x = x0 + ( IMG_W - m_bitmap.width) / 2;			m_bitmap.y = y0 + ( IMG_H - m_bitmap.height) / 2;				}				public function unload() { 			removeEventListener( Event.ADDED_TO_STAGE, onAddedToStage);		}		public function getSelectedUid():String { return m_selectedUid;}				public function setWidth( _w:Number) {			W = _w;			IMG_W = _w - 4;			IMG_H = IMG_W / 4 * 3;			H = 2+HEADER_H+1+IMG_H+1+FOOTER_H+2; // 全体の高さ			graphics.clear();			//グレー枠			graphics.beginFill( 0xd9d9d9);			graphics.drawRect( 0, 0, _w, H);			graphics.endFill();			// パディング白ベース			graphics.beginFill( 0xffffff);			graphics.drawRect( 1, 1, _w-2, H - 2);			graphics.endFill();			// ヘッダーベース			graphics.beginFill( 0xcccccc);			graphics.drawRect( 2, 2, _w - 4, HEADER_H);			graphics.endFill();			// フッターベース			graphics.beginFill( 0xf0f0f0);			graphics.drawRect( 2, H - 2 - FOOTER_H, _w - 4, FOOTER_H);			graphics.endFill();						// タイトルのサイズ			m_title.width = _w - m_title.x;						// 画像サイズと位置			setLoaderSizePosi();					}		public function getViewWidth():Number { return W;}		public function getViewHeight():Number { return H;}					}}