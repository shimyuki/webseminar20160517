package window.questionnaire {	import flash.display.*;	import flash.geom.*;	import common.*;	import window.*;	import flash.net.*;	import flash.text.*;	import flash.events.*;		// 講師用クラス	public class MemberList extends Sprite {		private const NOONE_ANSWERED = Main.LANG.getParam( "回答者なし");		//private const YET_ANSWERED = Main.LANG.getParam( "未回答");		//private const NOONE_YET_ANSWERED = Main.LANG.getParam( "未回答者はいません");		private const PAD = 3;		private const COLSPAN = 5;		private const INDENT = 30;		private var W:Number;		private var m_listtype:String;		private var m_cellArr:Array;		private var m_selection:Array; // 選択肢の配列		private var m_thumbList:Sprite;		private var m_textList:Sprite;				public function MemberList( w:Number, selection:Array, listtype:String) {			W = w;			m_listtype = listtype;						m_thumbList = new Sprite();			m_textList = new Sprite();						m_selection = selection;						// サムネイル版 生成＆配置			m_cellArr = new Array();			var posi_x = 0;			var posi_y = 0;			var col = 0;			for each( var member:Member in Main.CONF.getMemberArr()) {				if( Main.CONF.isPro( member.uid)) continue;				var cell:QCell = new QCell( member.uid, w / COLSPAN - PAD * ( COLSPAN - 1));				cell.x = posi_x;				cell.y = posi_y;				posi_x += cell.getViewWidth() + PAD;				col++;				if( col == COLSPAN) {					posi_x = 0;					posi_y += cell.getViewHeight() + PAD;					col = 0;				}				m_thumbList.addChild( cell)				m_cellArr.push( cell);			}		}				public function resetData( uidAnswerHash:Object) {				var uid_hash:Object = Main.CONF.getUidHash();							var cell:QCell;				var i:uint;				var uid:String;				// 全員無回答にリセット				for each( cell in m_cellArr) {					cell.setAnswer( "");				}				while( m_textList.numChildren) m_textList.removeChildAt( 0);								if( uidAnswerHash != null) {									//-----------------------------------------					// サムネイル版 個々の回答結果を反映					//-----------------------------------------					for each( cell in m_cellArr) {						if( uidAnswerHash[ cell.uid] != undefined) cell.setAnswer( uidAnswerHash[ cell.uid]);					}					//-----------------------------------------					// テキスト版 個々の回答結果を反映＆配置					//-----------------------------------------										// 選択肢のテキスト生成					var labArr:Array = new Array();					for( i = 0; i < m_selection.length; i++) {						var lab:TextField = TextField( m_textList.addChild( new TextField()));						lab.defaultTextFormat = new TextFormat( Main.CONF.getMainFont(), 12, 0x000000, true);						lab.text = m_selection[ i];						lab.wordWrap = true;						lab.width = W - lab.x;						lab.height = lab.textHeight + 4;												labArr.push( lab);					}					var posi_y = 0;					for( i = 0; i < labArr.length; i++) {						labArr[i].y = posi_y;						posi_y += labArr[i].height + PAD;												var arrow = m_textList.addChild( new Arrow01());						arrow.x = labArr[i].x + INDENT;						arrow.scaleX = arrow.scaleY = 0.6;												var names:TextField = TextField( m_textList.addChild( new TextField()));						names.defaultTextFormat = new TextFormat( Main.CONF.getMainFont(), 12, 0x333333);						names.wordWrap = true;						for( uid in uidAnswerHash) {							if( uidAnswerHash[ uid] == TextField( labArr[i]).text) names.appendText( uid_hash[uid] + "  ");						}						if( names.text == "") names.text = NOONE_ANSWERED;						names.x = arrow.x + 10;						names.y = posi_y;						names.width = W - names.x;						names.height = names.textHeight + 4;						arrow.y = names.y + names.height / 2;												posi_y += names.height + PAD;					}									}								if( m_listtype == ListTypeBtn.TEXT_CLICKED) showTextlist();// テキスト一覧				else showThumblist();// サムネイル一覧					}	/*	function parseCSV(dat:String):Object {	// 改行コードの差異をなくしすべて \n に	dat = (dat.split("\r\n")).join("\n");	dat = (dat.split("\r")).join("\n");	// CSVを多重配列に	//var csvDat:Array = new Array();	var hash:Object = new Object();	var tmp:Array = dat.split("\n");	var len:Number = tmp.length;	for(var i:Number=0; i<len; i++){		var arr:Array = tmp[i].split(",");		if(arr.length == 2) hash[arr[1]] = arr[0];	}	return hash;}		*/		public function setType( listtype:String) {			m_listtype = listtype;						if( m_listtype == ListTypeBtn.TEXT_CLICKED) showTextlist();// テキスト一覧			else showThumblist();// サムネイル一覧		}		function showTextlist() {			if( contains( m_thumbList)) removeChild( m_thumbList);			addChild( m_textList);		}		function showThumblist() {			if( contains( m_textList)) removeChild( m_textList);			addChild( m_thumbList);		}						public function getViewHeight() : Number {			return height;		}			}}