package window.questionnaire {	import flash.display.*;	import fl.controls.RadioButton;	import fl.controls.ComboBox;	import fl.events.*;	import common.*;	import window.*;	import fl.controls.RadioButtonGroup;	import flash.events.Event;	import flash.text.*;	import flash.events.*;	import flash.net.*;	import partition.Layout;		// アンケートのコンポーネントセット	public class QComponents extends Sprite {		public var H:Number = 600;		public var W:Number = 405; // ライブラリのm_bgの幅				public var status4sort:int = -1;		public var time4sort:Number;				protected const PAD:Number = 10;		// ラベル、見出し		protected const STATUS_LABEL_BEFORE = Main.LANG.getParam( "集計前");		protected const STATUS_LABEL_NOWON = Main.LANG.getParam( "集計中...");		protected const STATUS_LABEL_ANSWERD = Main.LANG.getParam( "回答済み"); // 受講生用		protected const STATUS_LABEL_FINISH = Main.LANG.getParam( "集計終了");		protected const SORT_STATUS_BEFORE = 0;		protected const SORT_STATUS_NOWON = 1;		protected const SORT_STATUS_ANSWERD = 2; // 受講生用		protected const SORT_STATUS_FINISH = 3;		protected const STATUS_LABEL_W = 80;		protected const STATUS_LABEL_H = 25;		protected const LABEL_START = Main.LANG.getParam( "集計開始");		protected const LABEL_STOP = Main.LANG.getParam( "集計終了");//Main.LANG.getParam( "集計結果を保存して終了");				// マスク		protected var m_mask:Shape;				protected var m_opened:Boolean = false;		protected var m_questionnaire:Questionnaire = null;		public function QComponents() {			m_title.multiline = false;			m_title.wordWrap = false;			m_mask = Shape( addChild( new Shape()));			mask = m_mask;						time4sort = ( new Date()).getTime();		}										public function getQuestionnaire(): Questionnaire {/*var tmp = "";for each( var t in m_questionnaire.selection) { tmp += String( t) + ",";}Main.addDebugMsg( "QComponents.getQuestionnaire: " + tmp);*/			return m_questionnaire;		}				// 選択肢や詳細の表示高さが変わった可能性があるので、全体を配置し直す		protected function changeHeight( e:* = null) {			if( m_opened) {				H = getOpenedHeight();			} else {				H = 55;			}									m_bg.height = H;						m_mask.graphics.clear();			m_mask.graphics.beginFill( 0);			m_mask.graphics.drawRect( 0, 0, m_bg.width, H);			m_mask.graphics.endFill();			dispatchEvent( new DrawerEvent( DrawerEvent.CONTENTS_H_CHANGED, H));		}		public function init( questionnaire:Questionnaire) {					}		protected function getOpenedHeight():Number {			m_mask.graphics.clear();			m_bg.height = 55;			return height + PAD;		}		public function open() {			m_opened = true;			m_arrow.rotation = 90;			changeHeight();		}		public function close() {			m_opened = false;			m_arrow.rotation = 0;			changeHeight();		}	}}