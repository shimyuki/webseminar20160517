package window.questionnaire {	import flash.display.*;	import flash.geom.*;	import common.*;	import window.*;	import flash.net.*;	import flash.text.*;	import flash.events.*;		// 講師用クラス	public class MemberListCon extends Sprite {		static public const CHANGE_HEIGHT = "CHANGE_HEIGHT";		private const TITLE = Main.LANG.getParam( "詳細");		private var m_arrow:Arrow01;		private var m_mask:Shape;		private var m_opened:Boolean = false;		//private var m_btnListType:ListTypeBtn;		private var m_list:MemberList;		private var W:Number;		private var PAD = 10;		private var CLOSED_H:Number;				public function MemberListCon( w:Number, selection:Array) {			W = w;						graphics.lineStyle( 1, 0xcccccc);			graphics.lineTo( w, 0);						m_arrow = Arrow01( addChild( new Arrow01()));			m_arrow.x = PAD;						// 見出し			var _title:TextField = TextField( addChild( new TextField()));			_title.defaultTextFormat = new TextFormat( Main.CONF.getMainFont(), 12);			_title.mouseEnabled = _title.selectable = false;			_title.autoSize = TextFieldAutoSize.LEFT;			_title.text = TITLE;			_title.x = m_arrow.x + PAD;			_title.y = 15;			m_arrow.y = _title.y + ( _title.height) / 2;						CLOSED_H = _title.y * 2 + _title.height;						m_mask = Shape( addChild( new Shape()));			mask = m_mask;						// 見出し周辺に開く閉じるの透明ボタンを設置			var clickObj = Sprite( addChild( new Sprite()));			clickObj.graphics.beginFill( 0, 0);			clickObj.graphics.drawRect( 0, _title.y, _title.x + _title.width, _title.height);			clickObj.graphics.endFill();			clickObj.buttonMode = true;			clickObj.addEventListener( MouseEvent.CLICK,				function( e:*) {					if( m_opened) close();					else open();				});						/*			// サムネイル表示かテキスト表示かの選択ボタン			m_btnListType = ListTypeBtn( addChild( new ListTypeBtn()));			m_btnListType.onClickText();			m_btnListType.x = PAD;			m_btnListType.y = CLOSED_H + 1;			m_btnListType.setEnabled( true);			*/						m_list = MemberList( addChild( new MemberList( W - PAD * 2, selection, ListTypeBtn.TEXT_CLICKED)));			m_list.x = PAD;			m_list.y = CLOSED_H + 1;;//m_btnListType.y + m_btnListType.height + PAD;						//m_btnListType.addEventListener( ListTypeBtn.THUMB_CLICKED, function( e:*) { m_list.setType( ListTypeBtn.THUMB_CLICKED);changeHeihgt();});			//m_btnListType.addEventListener( ListTypeBtn.TEXT_CLICKED, function( e:*) { m_list.setType( ListTypeBtn.TEXT_CLICKED);changeHeihgt();});				}		public function resetData( uidAnswerHash:Object) {			m_list.resetData( uidAnswerHash);			changeHeihgt();		}				function changeHeihgt() {			if( m_opened) {				m_mask.graphics.clear();				m_mask.graphics.beginFill( 0);				m_mask.graphics.drawRect( 0, 0, W, m_list.y + m_list.getViewHeight());				m_mask.graphics.endFill();			} else {				m_mask.graphics.clear();				m_mask.graphics.beginFill( 0);				m_mask.graphics.drawRect( 0, 0, W, CLOSED_H);				m_mask.graphics.endFill();			}			dispatchEvent( new Event( CHANGE_HEIGHT));		}				function open() {			m_opened = true;			m_arrow.rotation = 90;			changeHeihgt();		}		function close() {			m_opened = false;			m_arrow.rotation = 0;			changeHeihgt();		}				public function getViewHeight() : Number {			return m_mask.y + m_mask.height + PAD;		}			}}