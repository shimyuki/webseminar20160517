package window.whiteboard {	import flash.display.*;	import flash.geom.*;	import flash.events.*;	import partition.*;		public class ResizablePartitionContainer extends PartitionContainer {		public static const RESIZE = "ResizablePartitionContainer RESIZE";		public function ResizablePartitionContainer( _w:Number, _h:Number, isVertical:Boolean, container1st, container2nd, partitionPosi:Number) {			super(_w, _h, isVertical, container1st, container2nd, partitionPosi);		}				// ToolchipContainerの開く／閉じるボタンのクリック時に呼ばれる		// Main_android:fit()からも呼ばれる		public function setPartitionX( _x:Number) {			m_partition.x = _x;			dispatchEvent( new Event( RESIZE)); // PartitionDragManagerに知らせる		}				// Mainから、同期モード時のWBと受講生一覧のサイズ調整で呼ばれる		public function setPartitionY( _y:Number) {			m_partition.y = _y;									// 2012/01/05 追記			var whole_height = getViewHeight();			m_container1stMask.height = _y - Partition.W / 2;			m_container2ndMask.height = whole_height - ( m_container1stMask.height + Partition.W / 2);			m_container2ndMask.y = m_partition.y + Partition.W / 2;			m_container2ndCon.y = m_partition.y + Partition.W / 2;		}		// Mainから、同期モード時のWBと受講生一覧のサイズ調整で呼ばれる		public function setPartitionW( _w:Number) {			m_partition.width = _w;		}						/*		// Mainから、同期モード時のWBと受講生一覧のサイズ調整で呼ばれる		public function resize() {			dispatchEvent( new Event( RESIZE)); // PartitionDragManagerに知らせる		}*/	}}