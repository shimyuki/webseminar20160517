package window.whiteboard.slide {	import flash.display.*;	import flash.events.*;	import flash.geom.*;	import flash.filters.*;	import flash.net.SharedObject;		// ライブポインタ	public class LivePointer extends Sprite {				public function LivePointer( uid:String) {			var iconArrowShadow = addChild( new IconArrow());			iconArrowShadow.filters = [ getBitmapFilter()];						var iconArrow = addChild( new IconArrow());			var ct:ColorTransform = new ColorTransform();			if( Main.CONF.isPro( uid)) ct.color = 0xcc0000;			else if( uid == Main.CONF.getWhiteboardUID()) ct.color = 0x0000cc;			else if( Main.CONF.isStudent( uid)) ct.color = 0x00cc00;			iconArrow.transform.colorTransform = ct;									if( Main.CONF.isStudent( uid)) {				var so:SharedObject = Main.CONF.getSo( uid);				if( so != null) {					so.addEventListener( SyncEvent.SYNC, onSync);				} else {					alertDialog( Main.LANG.getReplacedSentence( "通信エラーにより、%sさんの動画配信設定のSharedObjectを取得できませんでした", Main.CONF.getName( uid)));				}			}			//			addEventListener( Event.ADDED_TO_STAGE, function( e:Event) {//							 visible = Main.isJoined( uid);//							 });				}				function onSync( e:SyncEvent) {			var so:SharedObject = e.target as SharedObject;			if( so.data.hash != undefined) {				visible = so.data.hash.whiteboard ? true : false;			}		}		function getBitmapFilter():BitmapFilter {            var color:Number = 0x000000;            var angle:Number = 45;            var alpha:Number = 0.5;            var blurX:Number = 3;            var blurY:Number = 3;            var distance:Number = 3;            var strength:Number = 0.65;            var inner:Boolean = false;            var knockout:Boolean = false;            var quality:Number = BitmapFilterQuality.HIGH;            return new DropShadowFilter(distance,                                        angle,                                        color,                                        alpha,                                        blurX,                                        blurY,                                        strength,                                        quality,                                        inner,                                        knockout);        }		function alertDialog( str) {			Main.addErrMsg( "LivePointer:" + str);		}	}}