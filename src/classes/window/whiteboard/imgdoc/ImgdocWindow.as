package window.whiteboard.imgdoc {	import flash.display.*;	import flash.geom.*;	import common.*;	import window.*;	import flash.text.*;	import flash.events.*;	import flash.net.*;	import partition.PartitionContainer;		// サイズ変更可能ウィンドウ	public class ImgdocWindow extends ResizableWindow {				private var m_btnListType;		private var m_folderName:TextField;		private var m_imgdocCon;				private const TEXT_W_BIAS = 100; // 適当				public function ImgdocWindow( con:ImgdocContainer) {			super( 100, 100);						m_imgdocCon = con;						var titleCon = new Sprite();			m_btnListType = ListTypeBtn( titleCon.addChild( new ListTypeBtn()));			m_btnListType.y = 5;			m_btnListType.onClickThumb();			m_btnListType.setEnabled( true);			m_btnListType.addEventListener( ListTypeBtn.THUMB_CLICKED, setListType);			m_btnListType.addEventListener( ListTypeBtn.TEXT_CLICKED, setListType);			//m_btnListType.dispatchEvent( new Event( ListTypeBtn.THUMB_CLICKED));						m_folderName = TextField( titleCon.addChild( new TextField()));			m_folderName.defaultTextFormat = new TextFormat( null/*Main.CONF.getMainFont()*/, 12, 0x1A328C);			m_folderName.autoSize = TextFieldAutoSize.LEFT;			m_folderName.mouseEnabled = m_folderName.selectable = false;			m_folderName.x = m_btnListType.x + m_btnListType.width + 5;			m_folderName.text = " ";			m_folderName.y = m_btnListType.y + ( m_btnListType.height - m_folderName.height) / 2;			//m_folderName.width = 100;						m_imgdocCon.addEventListener( ImgdocContainer.CHANGE_FOLDER_NAME,										 function( e:*) {											 m_folderName.autoSize = TextFieldAutoSize.NONE;											 m_folderName.text = m_imgdocCon.getFolderName();											 m_folderName.width = getViewWidth() - TEXT_W_BIAS; // 適当										 });						setTitleBar( titleCon);			setContents( m_imgdocCon);						m_contents.y = TitleBar.H + 1;		}		override public function setTitleBar( titleLeft, titleRight = null,									popupReq:URLRequest = null, usePopup:Boolean = true,									titleLeft_2nd = null) {			m_titlebar = ImgdocTitleBar( addChild( new ImgdocTitleBar( titleLeft)));			m_titlebar.addEventListener( POPUP, reDispatch);			m_titlebar.addEventListener( POPUP_END, reDispatch);			m_titlebar.addEventListener( POPUP_CLOSE, reDispatch);			resetMin();		}				function setListType( e:Event) {			m_imgdocCon.setListType( e.type);		}				override protected function onSizeChange( e:SizeHandleEvent) {			var min_h = TitleBar.H + m_sizeHandle.height + 10; // 適当			min_h = MIN_H < min_h ? min_h : MIN_H;						if( getViewWidth() - e.diffX < MIN_W) setViewWidth_evenifPopuped( MIN_W);			else setViewWidth_evenifPopuped( getViewWidth() - e.diffX);						if( getViewHeight() - e.diffY < min_h) setViewHeight_evenifPopuped( min_h);			else setViewHeight_evenifPopuped( getViewHeight() - e.diffY);						replaceSizeHandle();		}				override public function setViewWidth( w:Number, debug:String = ""):void {			if( ! parent || ( parent && parent.name == PartitionContainer.CONTAINER_NAME)) {				super.setViewWidth( w, debug);								if( m_folderName.autoSize == TextFieldAutoSize.NONE) m_folderName.width = w - TEXT_W_BIAS; // 適当			}					}		override public function setViewHeight( h:Number):void{			if( ! parent || ( parent && parent.name == PartitionContainer.CONTAINER_NAME)) super.setViewHeight( h);		}		function setViewWidth_evenifPopuped( w:Number):void {			super.setViewWidth( w);		}		function setViewHeight_evenifPopuped( h:Number):void{			super.setViewHeight( h);		}		function alertDialog( str:String) {			Main.addErrMsg(  "ImgdocWindow:" + str);		}					}}