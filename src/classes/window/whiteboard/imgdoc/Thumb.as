package window.whiteboard.imgdoc {	import flash.display.*;	import flash.net.*;	import flash.events.*;	import flash.geom.Matrix;		public class Thumb extends Sprite {		private var m_thumbDir:ThumbDir;		private var m_thumbDoc:ThumbDoc;		static const W_MAX = 90;		static const H_MAX = 90;		private var m_bmpData:BitmapData = null;		private var m_bitmap:Bitmap;		private var m_loadStarted:Boolean = false;		private var m_imgLoader:Loader = null;				public function Thumb() {			m_thumbDir = ThumbDir( addChild( new ThumbDir()));			m_thumbDir.x = ( W_MAX - m_thumbDir.width) / 2;			m_thumbDir.y = ( H_MAX - m_thumbDir.height) / 2;		}		public function setDoc() {			if( contains( m_thumbDir)) removeChild( m_thumbDir);			m_thumbDoc = ThumbDoc( addChild( new ThumbDoc()));			m_thumbDoc.x = ( W_MAX - m_thumbDoc.width) / 2;			m_thumbDoc.y = ( H_MAX - m_thumbDoc.height) / 2;		}		public function getViewHeight():Number {			return H_MAX;		}		public function dispose() {//Main.addDebugMsg( "dispose m_imgLoader:" + m_imgLoader);			if( m_imgLoader != null) {				m_imgLoader.contentLoaderInfo.removeEventListener( Event.COMPLETE, onComplete);				m_imgLoader.contentLoaderInfo.removeEventListener ( IOErrorEvent.IO_ERROR, onLoadError ); 				m_imgLoader.close();			}			if( m_bmpData != null) m_bmpData.dispose();		}		/*public function prepare( path:String) {			m_initPath = path; // 最初の読み込み時は使えるけど、D&Dで変わるので注意！		}*/		public function load( imgpath:String) {						// 講師とWB以外はサムネイル画像は不要なので、読み込みはしない			if( ! Main.CONF.isPro( Main.CONF.UID) && Main.CONF.getWhiteboardUID() != Main.CONF.UID) return;			Main.addDebugMsg( "Thumb:load( " + imgpath + " )");			m_loadStarted = true;			m_imgLoader = new Loader();			m_imgLoader.contentLoaderInfo.addEventListener( Event.COMPLETE, onComplete);			m_imgLoader.contentLoaderInfo.addEventListener ( IOErrorEvent.IO_ERROR, onLoadError ); 			var urlReq:URLRequest = new URLRequest( imgpath);			try{				m_imgLoader.load( urlReq);			} catch( e:Error) {							}		}		function onComplete( e:Event) {			var scale:Number;			if( m_imgLoader.width > m_imgLoader.height) {				scale = Thumb.W_MAX / m_imgLoader.width;			} else {				scale = Thumb.H_MAX / m_imgLoader.height;			}						var matrix:Matrix = new Matrix();			matrix.createBox( scale, scale);						m_bmpData = new BitmapData( m_imgLoader.width * scale, m_imgLoader.height * scale, true, 0x00ffffff);			m_bmpData.draw( m_imgLoader, matrix);						m_bitmap = Bitmap( addChild( new Bitmap( m_bmpData, "auto", true)));						m_bitmap.x = ( W_MAX - m_bitmap.width) / 2;			m_bitmap.y = ( H_MAX - m_bitmap.height) / 2;			if( contains( m_thumbDoc)) removeChild( m_thumbDoc);										m_imgLoader.unload();			m_imgLoader = null;					}		public function isLoadStarted() : Boolean { return m_loadStarted;}				function onLoadError( e:IOErrorEvent) {			dispatchEvent( e);		}		function alertDialog( str) {			Main.addErrMsg(  "Thumb: " + str);		}	}}