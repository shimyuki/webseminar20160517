package window.header {	import flash.display.*;	import flash.events.*;	import flash.utils.Timer;	public class IconRec extends Sprite {		static public const ON:uint = 1;		static public const OVER:uint = 2;		static public const OFF:uint = 3;		static public const WAITING:uint = 4;		static public const W:Number = 9;		private const RADIUS = W/2;		private var m_blink:Shape;		private var m_timer:Timer;		public function IconRec( status:uint) {			/*			var base:Shape = Shape( addChild( new Shape()));			base.graphics.lineStyle( 1, 0xaebed3);			base.graphics.beginFill( 0x999999);			base.graphics.drawCircle( 0, 0, RADIUS);			*/			var light:Shape = Shape( addChild( new Shape()));			light.graphics.lineStyle( 2, 0xffffff);			switch( status) {				case ON: light.graphics.beginFill( 0xa0d55f); break;				case OVER: light.graphics.beginFill( 0xa0d55f); break;				case OFF: light.graphics.beginFill( 0x999999); break;				case WAITING:					light.graphics.beginFill( 0xa0d55f);					m_blink = Shape( addChild( new Shape()));					m_blink.graphics.lineStyle( 2, 0xffffff);					m_blink.graphics.beginFill( 0xcc0000);					m_blink.graphics.drawCircle( 0, 0, RADIUS);					m_timer = new Timer( 500);					m_timer.addEventListener( TimerEvent.TIMER, function( e:*){ m_blink.visible = !m_blink.visible;});					addEventListener( Event.ADDED_TO_STAGE, onAdded2stage);					break;				default: break;			}			light.graphics.drawCircle( 0, 0, RADIUS);					}		function onAdded2stage( e:Event) {			addEventListener( Event.REMOVED_FROM_STAGE, onRemovedFromStage);			removeEventListener( Event.ADDED_TO_STAGE, onAdded2stage);			m_timer.start();		}		function onRemovedFromStage( e:Event) {			addEventListener( Event.ADDED_TO_STAGE, onAdded2stage);			m_timer.stop();		}	}}